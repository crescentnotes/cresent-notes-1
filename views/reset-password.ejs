<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }
        .container {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            width: 300px;
            max-width: 100%;
        }
        h1 {
            margin-bottom: 20px;
            font-size: 24px;
            color: #333;
        }
        .input-container {
            position: relative;
            margin-bottom: 15px;
        }
        input {
            width: calc(100% - 22px);
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .input-container i {
            position: absolute;
            top: 50%;
            right: 10px;
            transform: translateY(-50%);
            cursor: pointer;
        }
        button {
            background-color: black;
            color: #fff;
            border: none;
            padding: 10px;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
            font-size: 16px;
        }
        button:hover {
            background-color: rgb(58, 55, 55);
        }
        .message {
            margin-top: 10px;
            font-size: 14px;
        }
        .message.success {
            color: #28a745;
        }
        .message.error {
            color: #dc3545;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Reset Your Password</h1>
        <form id="resetPasswordForm">
            <input type="hidden" name="token" id="token" value="<%= token %>">
            
            <div class="input-container">
                <input type="password" id="newPassword" name="newPassword" placeholder="New Password" required>
                <i id="toggleNewPassword" class="fas fa-eye"></i>
            </div>
            
            <div class="input-container">
                <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirm Password" required>
                <i id="toggleConfirmPassword" class="fas fa-eye"></i>
            </div>
            
            <button type="submit">Reset Password</button>
            <p id="message" class="message"></p>
        </form>
    </div>

    <script>
        document.getElementById('resetPasswordForm').addEventListener('submit', function(event) {
            event.preventDefault();

            const token = document.getElementById('token').value;
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const messageElement = document.getElementById('message');

            // Validate passwords
            if (newPassword !== confirmPassword) {
                messageElement.textContent = 'Passwords do not match.';
                messageElement.className = 'message error';
                return;
            }

            // Submit form data via Fetch API
            fetch(`/reset/${token}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ password: newPassword })
            })
            .then(response => response.json())
            .then(data => {
                if (data.message === 'Invalid or expired token') {
                    messageElement.textContent = data.message;
                    messageElement.className = 'message error';
                } else if (data.message === 'Password reset successfully') {
                    messageElement.textContent = 'Password has been reset successfully!';
                    messageElement.className = 'message success';
                    setTimeout(() => window.location.href = '/login', 2000); // Redirect after 2 seconds
                } else {
                    messageElement.textContent = 'An error occurred. Please try again later.';
                    messageElement.className = 'message error';
                }
            })
            .catch(error => {
                console.error('Error:', error);
                messageElement.textContent = 'An error occurred. Please try again later.';
                messageElement.className = 'message error';
            });
        });

        // Toggle password visibility
        function togglePasswordVisibility(inputId, iconId) {
            const input = document.getElementById(inputId);
            const icon = document.getElementById(iconId);
            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        document.getElementById('toggleNewPassword').addEventListener('click', () => {
            togglePasswordVisibility('newPassword', 'toggleNewPassword');
        });

        document.getElementById('toggleConfirmPassword').addEventListener('click', () => {
            togglePasswordVisibility('confirmPassword', 'toggleConfirmPassword');
        });
    </script>
</body>
</html>
